% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suso_api_assignment.R
\name{suso_set_assignments}
\alias{suso_set_assignments}
\title{Survey Solutions API call for assingment manipulation}
\usage{
suso_set_assignments(
  server = suso_get_api_key("susoServer"),
  apiUser = suso_get_api_key("susoUser"),
  apiPass = suso_get_api_key("susoPass"),
  token = NULL,
  workspace = NULL,
  AssId = NULL,
  payload = NULL,
  operations.type = c("recordAudio", "archive", "assign", "changeQuantity", "close",
    "unarchive")
)
}
\arguments{
\item{server}{Survey Solutions server address}

\item{apiUser}{Survey Solutions API user}

\item{apiPass}{Survey Solutions API password}

\item{token}{If Survey Solutions server token is provided \emph{apiUser} and \emph{apiPass} will be ignored}

\item{workspace}{If workspace name is provide requests are made regarding this specific workspace}

\item{AssId}{the assignment id for which the change is required}

\item{payload}{requirements depend on the operations type. See details bellow.}

\item{operations.type}{specifies the desired operation, one of recordAudio, archive/unarchive, (re-)assign
changeQuantity, or close, if specified, requires in some case also \emph{pauyload} to be specified. See details bellow.}
}
\value{
Returns an S3 object of assignmentClass
}
\description{
\code{suso_set_assignments} allows to (re-)assign, change limits or audio
recording settings, as well as archiving/unarchive and close assignments.
}
\details{
If operations.type is \emph{recordAudio}, \code{TRUE/FALSE} is required as payload, if it is \emph{archive} or \emph{unarchive},
no payload is required, if it is \emph{assign} the payload must be the uid of the new responsible, if it is \emph{changeQuantity} the payload
must be the new integer number of assignments, if it is \emph{close} no payload is required.
}
\examples{
\dontrun{

# (re-)assign existing assignment
asslist<-suso_set_assignments(
                   workspace = "myworkspace",
                   AssId = 10,
                   payload = "43f3d2bd-7959-4706-97ae-2653b5685c9e",
                   operations.type = "assign"
                   )
# get all assignment for specific responsible
asslist<-suso_set_assignments(
                   workspace = "myworkspace",
                   responsibleID = "a67d2b82-bf28-40cf-bd1a-7901225c0885"
                   )
# get the overall count
getinfo(asslist, "totalcount")

#get all single assignment details
asslist<-suso_set_assignments(
                   workspace = "myworkspace",
                   AssId = 1
                   )
# retrieve the uid of the person responsible
getinfo(asslist, "responsibleid")

}

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suso_api_assignment.R
\name{suso_get_assignments}
\alias{suso_get_assignments}
\title{Survey Solutions API call for assignment list}
\usage{
suso_get_assignments(
  questID = NULL,
  server = suso_get_api_key("susoServer"),
  apiUser = suso_get_api_key("susoUser"),
  apiPass = suso_get_api_key("susoPass"),
  token = NULL,
  workspace = NULL,
  AssId = NULL,
  version = NULL,
  responsibleID = NULL,
  order.by = "",
  operations.type = c("assignmentQuantitySettings", "history", "recordAudio")
)
}
\arguments{
\item{questID}{only assignments for \emph{QuestionnaireId} are returned,
requires \code{version} being not NULL}

\item{server}{Survey Solutions server address}

\item{apiUser}{Survey Solutions API user}

\item{apiPass}{Survey Solutions API password}

\item{token}{If Survey Solutions server token is provided \emph{apiUser} and \emph{apiPass} will be ignored}

\item{workspace}{If workspace name is provide requests are made regarding this specific workspace}

\item{AssId}{if NULL a list of all assignments on the server, if not NULL
the assignment details for a specific assignment ID}

\item{version}{version of the questionnaire, only required with \code{questID}}

\item{responsibleID}{the ID of the responsible user (Supervisor or Interviewer).
Retrieves all assignments for this user.}

\item{order.by}{determines the column by which the assignment list should be ordered}

\item{operations.type}{specifies the desired operation, one of assignmentQuantitySettings, history, or recordAudio,
if specified, requires also \emph{AssId} to be specified.}
}
\value{
Returns an S3 object of assignmentClass. If you select any of the operations types, then no data.frame is returned,
the data.table will be NULL, however any information returned from the API can be retrieved by using the \code{getinfo()}
function with the corresponding arguments.
}
\description{
\code{suso_get_assignments} calls the Survey Solutions assingment API
}
\examples{
\dontrun{

# get all assignment for specific workspace
asslist<-suso_get_assignments(
                   workspace = "myworkspace"
                   )
# get all assignment for specific responsible
asslist<-suso_get_assignments(
                   workspace = "myworkspace",
                   responsibleID = "a67d2b82-bf28-40cf-bd1a-7901225c0885"
                   )
# get the overall count
getinfo(asslist, "totalcount")

#get all single assignment details
asslist<-suso_get_assignments(
                   workspace = "myworkspace",
                   AssId = 1
                   )
# retrieve the uid of the person responsible
getinfo(asslist, "responsibleid")

# get the status of the quantitysettings
asslist<-suso_get_assignments(
                   workspace = "myworkspace",
                   AssId = 1,
                   operations.type = "assignmentQuantitySettings")
asslist
Null data.table (0 rows and 0 cols)

getinfo(asslist, "canchangequantity")
[1] TRUE
}

}
